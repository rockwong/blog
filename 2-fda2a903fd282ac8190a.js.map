{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/side.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","Slide","state","activeNav","listObj","isOpenNav","toggleMenu","e","preventDefault","_this","setState","itemClick","url","navigate","navClick","navName","checkIsCurrent","pathname","withPrefix","encodeURI","globalHistory","location","init","defaultActiveNav","listObjWidthNavName","list","filter","item","Boolean","node","fields","reduce","obj","index","date","frontmatter","modified","moment","format","push","prefixReg","RegExp","locationName","replace","split","decodeName","decodeURI","componentDidMount","this","componentWillReceiveProps","nextProps","_this2","siteTitle","_this$state","navList","Object","keys","map","react_default","className","key","onClick","length","excerptList","tagPath","id","dangerouslySetInnerHTML","__html","emoji","toImage","title","excerpt","Fragment","href","gatsby_browser_entry","to","PureComponent","array","defaultProps","Layout","side_Slide","site","siteMetadata","allMarkdownRemark","edges","_2945309751","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"2-fda2a903fd282ac8190a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link, navigate, withPrefix } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport React from 'react';\nimport { globalHistory } from '@reach/router';\nimport emoji from 'emojione';\n\nexport default class Slide extends React.PureComponent {\n  static propTypes = {\n    siteTitle: PropTypes.string,\n    list: PropTypes.array,\n  };\n\n  static defaultProps = {\n    siteTitle: ``,\n    list: [],\n  };\n\n  state = {\n    activeNav: '',\n    listObj: {},\n    isOpenNav: false,\n  };\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.list !== this.props.list) {\n      this.init(nextProps);\n    }\n  }\n\n  toggleMenu = e => {\n    e.preventDefault();\n    this.setState(state => ({ isOpenNav: !state.isOpenNav }));\n  };\n\n  itemClick = url => e => {\n    e.preventDefault();\n    navigate(url);\n  };\n\n  navClick = navName => e => {\n    e.preventDefault();\n    this.setState({ activeNav: navName });\n  };\n\n  checkIsCurrent = pathname => withPrefix(encodeURI(pathname)) === globalHistory.location.pathname;\n\n  init = (props = this.props) => {\n    let defaultActiveNav;\n    const listObjWidthNavName = props.list\n      .filter(item => Boolean(item.node.fields.navName))\n      .reduce((obj, item, index) => {\n        const navName = item.node.fields.navName;\n\n        // init activeNav\n        if (index === 0 && !this.state.activeNav) defaultActiveNav = navName;\n        // format date\n        const unknownDate = 'Unknown date';\n        const date = item.node.frontmatter.modified;\n        if (date && date !== unknownDate) {\n          item.date = moment(date).format('YYYY/DD/MM HH:mm');\n        } else {\n          item.date = unknownDate;\n        }\n\n        // datalist zip width obj\n        obj[navName] = obj[navName] || [];\n        obj[navName].push(item);\n        return obj;\n      }, {});\n\n    // 通过 location 判断默认 nav\n    const prefixReg = new RegExp(`^${withPrefix('')}`);\n    const locationName = globalHistory.location.pathname\n      .replace(prefixReg, '')\n      .split('/')\n      .filter(Boolean)[0];\n    const decodeName = decodeURI(locationName);\n    if (decodeName && listObjWidthNavName[decodeName]) {\n      defaultActiveNav = decodeName;\n    }\n    this.setState({ listObj: listObjWidthNavName, activeNav: defaultActiveNav });\n  };\n\n  render() {\n    const { siteTitle } = this.props;\n    const { activeNav, listObj } = this.state;\n    // nav list\n    const navNameList = Object.keys(listObj);\n    const navList = navNameList.map((navName, index) => (\n      <li className=\"pure-menu-item\" key={index}>\n        <a\n          onClick={this.navClick(navName)}\n          className={`pure-menu-link ${activeNav === navName ? 'active' : ''}`}\n        >\n          {navName}\n          <span className=\"email-count\">({listObj[navName].length})</span>\n        </a>\n      </li>\n    ));\n\n    // excerpt list1\n    const excerptListData = listObj[activeNav] || [];\n    const excerptList = excerptListData.map(item => (\n      <div\n        onClick={this.itemClick(item.node.fields.tagPath)}\n        className={`email-item  pure-g ${\n          this.checkIsCurrent(item.node.fields.tagPath)\n            ? 'email-item-unread email-item-selected'\n            : ''\n        }`}\n        key={item.node.id}\n      >\n        <div className=\"pure-u-1\">\n          <h5 className=\"email-name\">\n            {item.date} · {item.node.fields.navName}\n          </h5>\n          <h4\n            className=\"email-subject\"\n            dangerouslySetInnerHTML={{ __html: emoji.toImage(item.node.frontmatter.title) }}\n          />\n          <p className=\"email-desc\">{item.node.excerpt}</p>\n        </div>\n      </div>\n    ));\n\n    return (\n      <>\n        <div id=\"nav\" className={`pure-u ${this.state.isOpenNav ? 'active' : ''}`}>\n          <a href=\"#\" className=\"nav-menu-button\" onClick={this.toggleMenu}>\n            Menu\n          </a>\n\n          <div className=\"nav-inner\">\n            <Link to=\"/\" className=\"primary-button pure-button\">\n              {siteTitle}\n            </Link>\n\n            <div className=\"pure-menu\">\n              <ul className=\"pure-menu-list\">\n                {navList}\n                <li className=\"pure-menu-heading\">Personal</li>\n                <li className=\"pure-menu-item\">\n                  <Link to=\"/about\" className=\"pure-menu-link\">\n                    <span className=\"email-label-personal\" />\n                    About\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div id=\"list\" className=\"pure-u-1\">\n          {excerptList}\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Side from './side';\nimport './pure.css';\nimport './email.css';\n\nconst Layout = props => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n        allMarkdownRemark {\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                tags\n                modified\n              }\n              fields {\n                slug\n                navName\n                tagPath\n              }\n              excerpt\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div id=\"layout\" className=\"content pure-g\">\n        <Side siteTitle={data.site.siteMetadata.title} list={data.allMarkdownRemark.edges} />\n        <div id=\"main\" className=\"pure-u-1\">\n          {props.children}\n        </div>\n      </div>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}