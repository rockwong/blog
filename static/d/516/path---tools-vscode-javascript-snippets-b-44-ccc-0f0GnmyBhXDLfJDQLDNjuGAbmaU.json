{"data":{"markdownRemark":{"html":"<h1>vscode-javascript snippets</h1>\n<h2>Snippets</h2>\n<p>Below is a list of all available snippets and the triggers of each one. The <strong>⇥</strong> means the <code>TAB</code> key.</p>\n<h3>Import and export</h3>\n<table>\n<thead>\n<tr>\n<th align=\"right\">Trigger</th>\n<th>Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><code>imp→</code></td>\n<td>imports entire module <code>import fs from 'fs';</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>imn→</code></td>\n<td>imports entire module without module name <code>import 'animate.css'</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>imd→</code></td>\n<td>imports only a portion of the module using destructing  <code>import {rename} from 'fs';</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>ime→</code></td>\n<td>imports everything as alias from the module <code>import * as localAlias from 'fs';</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>ima→</code></td>\n<td>imports only a portion of the module as alias <code>import { rename as localRename } from 'fs';</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>enf→</code></td>\n<td>exports name function <code>export const log = (parameter) => { console.log(parameter);};</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>edf→</code></td>\n<td>exports default function <code>export default (parameter) => { console.log(parameter);};</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>ecl→</code></td>\n<td>exports default class <code>export default class Calculator { };</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>ece→</code></td>\n<td>exports default class by extending a base one <code>export default class Calculator extends BaseClass { };</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Class helpers</h3>\n<table>\n<thead>\n<tr>\n<th align=\"right\">Trigger</th>\n<th>Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><code>con→</code></td>\n<td>adds default constructor in the class <code>constructor() {}</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>met→</code></td>\n<td>creates a method inside a class <code>add() {}</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>pge→</code></td>\n<td>creates a getter property <code>get propertyName() {return value;}</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>pse→</code></td>\n<td>creates a setter property <code>set propertyName(value) {}</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Various methods</h3>\n<table>\n<thead>\n<tr>\n<th align=\"right\">Trigger</th>\n<th>Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><code>fre→</code></td>\n<td>forEach loop in ES6 syntax <code>array.forEach(currentItem => {})</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>fof→</code></td>\n<td>for ... of loop <code>for(const item of object) {}</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>fin→</code></td>\n<td>for ... in loop <code>for(const item in object) {}</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>anfn→</code></td>\n<td>creates an anonymous function <code>(params) => {}</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>nfn→</code></td>\n<td>creates a named function <code>const add = (params) => {}</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>dob→</code></td>\n<td>destructing object syntax <code>const {rename} = fs</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>dar→</code></td>\n<td>destructing array syntax <code>const [first, second] = [1,2]</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>sti→</code></td>\n<td>set interval helper method <code>setInterval(() => {});</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>sto→</code></td>\n<td>set timeout helper method <code>setTimeout(() => {});</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>prom→</code></td>\n<td>creates a new Promise <code>return new Promise((resolve, reject) => {});</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Console methods</h3>\n<table>\n<thead>\n<tr>\n<th align=\"right\">Trigger</th>\n<th>Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\"><code>cas→</code></td>\n<td>console alert method <code>console.assert(expression, object)</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>ccl→</code></td>\n<td>console clear <code>console.clear()</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>cco→</code></td>\n<td>console count <code>console.count(label)</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>cdi→</code></td>\n<td>console dir <code>console.dir</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>cer→</code></td>\n<td>console error <code>console.error(object)</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>cgr→</code></td>\n<td>console group <code>console.group(label)</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>cge→</code></td>\n<td>console groupEnd <code>console.groupEnd()</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>clg→</code></td>\n<td>console log <code>console.log(object)</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>ctr→</code></td>\n<td>console trace <code>console.trace(object)</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>cwa→</code></td>\n<td>console warn <code>console.warn</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>cin→</code></td>\n<td>console info <code>console.info</code></td>\n</tr>\n<tr>\n<td align=\"right\"><code>clt→</code></td>\n<td>console table <code>console.table</code></td>\n</tr>\n</tbody>\n</table>","frontmatter":{"title":"vscode-javascript snippets"}}},"pageContext":{"slug":"/notes/vscode-javascript snippets/","tagPath":"/Tools/vscode-javascript snippets/"}}