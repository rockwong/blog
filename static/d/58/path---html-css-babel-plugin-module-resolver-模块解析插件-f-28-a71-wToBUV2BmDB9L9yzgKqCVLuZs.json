{"data":{"markdownRemark":{"html":"<h1>babel-plugin-module-resolver 模块解析插件</h1>\n<p><code>babel-plugin-module-resolver</code> 是一个Babel模块解析插件, 在<code>.babelrc</code>中可以配置模块的导入搜索路径. 为模块添加一个新的解析器。这个插件允许你添加新的“根”目录，这些目录包含你的模块。它还允许您设置一个自定义别名目录，具体的文件，甚至其他NPM模块。</p>\n<h2>使用方法</h2>\n<pre><code class=\"language-bash\">npm install --save-dev babel-plugin-module-resolver \n</code></pre>\n<p>配置 <code>.bablerc</code></p>\n<pre><code class=\"language-js\">{\n  \"plugins\": [\n    [\"module-resolver\", {\n      \"root\": [\"./\"],\n      \"alias\": {\n         \"components\":\"./src/components\",\n         \"utils\":\"./src/utils\",\n      }\n    }]\n  ]\n}\n</code></pre>\n<h2>示例</h2>\n<pre><code class=\"language-js\">//import Mp from '../../components/MyComponent'; \nimport Mp from 'components/MyComponent' \n\nimport MyUtilFn from 'utils/MyUtilFn'; \n//import MyUtilFn from '../../../../utils/MyUtilFn'; \n</code></pre>\n<h2>选项</h2>\n<p><code>root</code>：一个字符串或根目录的数组。指定路径或全局路径（例如./src/**/components）</p>\n<p><code>alias</code>：别名的配置。也可以别名node_modules依赖关系，而不仅仅是本地文件</p>\n<p><code>extensions</code>：解析器中使用的扩展数组。覆盖默认扩展名（['.js', '.jsx', '.es', '.es6', '.mjs']）。</p>\n<p><code>cwd</code>：默认情况下，工作目录是用于解析器的工作目录，但是您可以覆盖您的项目。\n自定义值<code>babelrc</code>将使插件根据要解析的文件查找最接近的babelrc配置。\n自定义值<code>packagejson</code>将使插件查找最接近package.json的文件解析。</p>\n<p><code>transformFunctions</code>：将会变换其第一个参数的函数和方法的数组。默认情况下，这些方法是：require，require.resolve，System.import，jest.genMockFromModule，jest.mock，jest.unmock，jest.doMock，jest.dontMock。</p>\n<p><code>resolvePath(sourcePath, currentFile, opts)</code>：为文件中的每个路径调用的函数。默认情况下，模块解析器使用一个内部函数，如下所示：import { resolvePath } from 'babel-plugin-module-resolver'。该opts参数是通过babel配置通过选\n择对象。</p>\n<h2>Webstorm 中使用</h2>\n<p>需要将资源目录设置成 <code>Resource Root</code>,否则可能造成编辑器无法识别引用，造成无法快捷跳转到指定的组建。</p>\n<p>设置方法：<code>右键目录</code> -> <code>Mark Directory as</code> -> <code>Resource Root</code></p>\n<h2>ReactNative中使用</h2>\n<p>让packager正确解决各平台的模块，必须添加 <code>ios.js</code> 或 <code>android.js</code>扩展：</p>\n<pre><code class=\"language-js\">{\n  \"plugins\": [\n    [\n      \"module-resolver\",\n      {\n        \"root\": [\"./src\"],\n        \"extensions\": [\".js\", \".ios.js\", \".android.js\"]\n      }\n    ]\n  ]\n}\n</code></pre>","frontmatter":{"title":"babel-plugin-module-resolver 模块解析插件"}}},"pageContext":{"slug":"/notes/babel-plugin-module-resolver 模块解析插件/","tagPath":"/HTML-CSS/babel-plugin-module-resolver 模块解析插件/"}}