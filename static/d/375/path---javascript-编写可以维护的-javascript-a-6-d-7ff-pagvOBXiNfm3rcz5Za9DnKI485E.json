{"data":{"markdownRemark":{"html":"<h1>编写可以维护的Javascript</h1>\n<h2>隔离应用逻辑:应用代码与事件代码分开</h2>\n<blockquote>\n<p>处理事件函数中将事件代码与应用代码分开\n代码尽量少用全局变量</p>\n</blockquote>\n<pre><code class=\"language-js\">    var Mytest={\n            handerClick:function(event){\n                this.showPopup(event);\n            },\n            showPopup:function(event){\n             var popDom=document.getElementById('popup');\n             popDom.style.left=event.clientX+'px';\n             popDom.style.top=event.clientY+'px';\n            }\n        };\n        document.getElementById('test').addEventListener('click',function(event){\n            Mytest.handerClick(event);\n        })\n        \n</code></pre>\n<h2>不要分发事件对象</h2>\n<blockquote>\n<p>事件函数应为接触到event对象的唯一函数，在传入应用逻辑前进行必要操作。\n如取消默认事件，及需要传入的属性值</p>\n</blockquote>\n<pre><code class=\"language-js\">    var Mytest={\n            handerClick:function(event){\n                event.preventDefault();\n                this.showPopup(event.clientX,event.clientY);\n            },\n            showPopup:function(x,y){\n             var popDom=document.getElementById('popup');\n             popDom.style.left=x+'px';\n             popDom.style.top=y+'px';\n            }\n        };\n        document.getElementById('test').addEventListener('click',function(event){\n            Mytest.handerClick(event);\n        })\n        \n</code></pre>","frontmatter":{"title":"编写可以维护的Javascript"}}},"pageContext":{"slug":"/notes/编写可以维护的Javascript/","tagPath":"/Javascript/编写可以维护的Javascript/"}}