{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","SecondPage","a","createElement","title","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAkBeQ,UAbI,kBACjBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,UACXP,EAAAK,EAAAC,cAAA,kBACAN,EAAAK,EAAAC,cAAA,2DACAN,EAAAK,EAAAC,cAAA,4EAIAN,EAAAK,EAAAC,cAAA,iKCTJ,SAASE,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUN,EAASE,EAATF,MAChD,OACEO,EAAAT,EAAAC,cAACS,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJV,GAAeS,EAAKE,KAAKC,aAAaZ,YACxC,OACEI,EAAAT,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdb,QAEFJ,MAAOA,EACPkB,cAAa,QAAUN,EAAKE,KAAKC,aAAaf,MAC9CK,KAAM,CACJ,CACEc,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASpB,GAEX,CACEmB,KAAI,sBACJC,QAASP,IAGVU,OACCjB,EAASkB,OAAS,EACd,CACEL,KAAI,WACJC,QAASd,EAASmB,KAAT,OAEX,IAELF,OAAOlB,MAtDlBO,KAAAc,IA8DJzB,EAAI0B,aAAe,CACjBvB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZL,EAAI2B,UAAY,CACdzB,YAAa0B,IAAUC,OACvB1B,KAAMyB,IAAUC,OAChBzB,KAAMwB,IAAUE,MAChBzB,SAAUuB,IAAUG,QAAQH,IAAUC,QACtC9B,MAAO6B,IAAUC,OAAOG,YAGXhC,MAEf,IAAMS,EAAY","file":"component---src-pages-about-js-31b1c8e00000fe68f625.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <h1>关于网站</h1>\n    <p>原网站利用 MWeb 发布并记录 旧地址：http://rockwong.com/blog/</p>\n    <p>\n      由于 MWeb 不夸平台，在使用windows的时候无法使用，版本升级后旧的key也失效了，所以转向开源的\n      notable 。\n    </p>\n    <p>使用 Gatsby 简单搭建了一个 \"在线预览版的笔记 Blog\", 哈哈。。。</p>\n  </Layout>\n);\n\nexport default SecondPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}